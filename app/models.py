from django.db import models

# Create your models here.
class Player(models.Model):
    playerId = models.CharField(primary_key=True, max_length=200)
    gamesPlayed = models.FloatField()
    players_details_givenName = models.CharField(max_length=200)
    players_details_surname= models.CharField(max_length=200)
    players_details_heightCm = models.IntegerField()
    players_details_weightKg = models.IntegerField()
    players_details_jumperNumber = models.IntegerField()
    players_details_kickingFoot = models.CharField(max_length=200)
    players_details_stateOfOrigin = models.CharField(max_length=200)
    players_details_position = models.CharField(max_length=200)
    players_details_photoURL = models.URLField(max_length=200)
    team_teamName = models.CharField(max_length=200)
    team_teamAbbr = models.CharField(max_length=200)
    team_teamNickname = models.CharField(max_length=200)
    team_teamId = models.CharField(max_length=200)
    totals_matchesPlayed = models.FloatField()
    totals_timeOnGroundPercentage = models.FloatField()
    totals_behinds = models.FloatField()
    totals_bounces = models.FloatField()
    totals_centreClearances = models.FloatField()
    totals_clangers = models.FloatField()
    totals_contestDefLosses = models.FloatField()
    totals_contestDefLossPercentage = models.FloatField()
    totals_contestDefOneOnOnes = models.FloatField()
    totals_contestedMarks = models.FloatField()
    totals_contestedPossessionRate = models.FloatField()
    totals_contestedPossessions = models.FloatField()
    totals_contestOffOneOnOnes = models.FloatField()
    totals_contestOffWins = models.FloatField()
    totals_contestOffWinsPercentage = models.FloatField()
    totals_defHalfPressureActs = models.FloatField()
    totals_disposalEfficiency = models.FloatField()
    totals_disposals = models.FloatField()
    totals_dreamTeamPoints = models.FloatField()
    totals_effectiveDisposals = models.FloatField()
    totals_effectiveKicks = models.FloatField()
    totals_f50GroundBallGets = models.FloatField()
    totals_freesAgainst = models.FloatField()
    totals_freesFor = models.FloatField()
    totals_goalAccuracy = models.FloatField()
    totals_goalAssists = models.FloatField()
    totals_goals = models.FloatField()
    totals_groundBallGets = models.FloatField()
    totals_handballs = models.FloatField()
    totals_hitouts = models.FloatField()
    totals_hitoutsToAdvantage = models.FloatField()
    totals_hitoutToAdvantageRate = models.FloatField()
    totals_hitoutWinPercentage = models.FloatField()
    totals_inside50s = models.FloatField()
    totals_interceptMarks = models.FloatField()
    totals_intercepts = models.FloatField()
    totals_kickEfficiency = models.FloatField()
    totals_kicks = models.FloatField()
    totals_kickToHandballRatio = models.FloatField()
    totals_marks = models.FloatField()
    totals_marksInside50 = models.FloatField()
    totals_marksOnLead = models.FloatField()
    totals_metresGained = models.FloatField()
    totals_onePercenters = models.FloatField()
    totals_pressureActs = models.FloatField()
    totals_ranking = models.FloatField()
    totals_ratingPoints = models.FloatField()
    totals_rebound50s = models.FloatField()
    totals_ruckContests = models.FloatField()
    totals_scoreInvolvements = models.FloatField()
    totals_scoreLaunches = models.FloatField()
    totals_shotsAtGoal = models.FloatField()
    totals_spoils = models.FloatField()
    totals_stoppageClearances = models.FloatField()
    totals_tackles = models.FloatField()
    totals_tacklesInside50 = models.FloatField()
    totals_totalClearances = models.FloatField()
    totals_totalPossessions = models.FloatField()
    totals_turnovers = models.FloatField()
    totals_uncontestedPossessions = models.FloatField()
    averages_matchesPlayed = models.FloatField()
    averages_timeOnGroundPercentage = models.FloatField()
    averages_behinds = models.FloatField()
    averages_bounces = models.FloatField()
    averages_centreClearances = models.FloatField()
    averages_clangers = models.FloatField()
    averages_contestDefLosses = models.FloatField()
    averages_contestDefLossPercentage = models.FloatField()
    averages_contestDefOneOnOnes = models.FloatField()
    averages_contestedMarks = models.FloatField()
    averages_contestedPossessionRate = models.FloatField()
    averages_contestedPossessions = models.FloatField()
    averages_contestOffOneOnOnes = models.FloatField()
    averages_contestOffWins = models.FloatField()
    averages_contestOffWinsPercentage = models.FloatField()
    averages_defHalfPressureActs = models.FloatField()
    averages_disposalEfficiency = models.FloatField()
    averages_disposals = models.FloatField()
    averages_dreamTeamPoints = models.FloatField()
    averages_effectiveDisposals = models.FloatField()
    averages_effectiveKicks = models.FloatField()
    averages_f50GroundBallGets = models.FloatField()
    averages_freesAgainst = models.FloatField()
    averages_freesFor = models.FloatField()
    averages_goalAccuracy = models.FloatField()
    averages_goalAssists = models.FloatField()
    averages_goals = models.FloatField()
    averages_groundBallGets = models.FloatField()
    averages_handballs = models.FloatField()
    averages_hitouts = models.FloatField()
    averages_hitoutsToAdvantage = models.FloatField()
    averages_hitoutToAdvantageRate = models.FloatField()
    averages_hitoutWinPercentage = models.FloatField()
    averages_inside50s = models.FloatField()
    averages_interceptMarks = models.FloatField()
    averages_intercepts = models.FloatField()
    averages_kickEfficiency = models.FloatField()
    averages_kicks = models.FloatField()
    averages_kickToHandballRatio = models.FloatField()
    averages_marks = models.FloatField()
    averages_marksInside50 = models.FloatField()
    averages_marksOnLead = models.FloatField()
    averages_metresGained = models.FloatField()
    averages_onePercenters = models.FloatField()
    averages_pressureActs = models.FloatField()
    averages_ratingPoints = models.FloatField()
    averages_rebound50s = models.FloatField()
    averages_ruckContests = models.FloatField()
    averages_scoreInvolvements = models.FloatField()
    averages_scoreLaunches = models.FloatField()
    averages_shotsAtGoal = models.FloatField()
    averages_spoils = models.FloatField()
    averages_stoppageClearances = models.FloatField()
    averages_tackles = models.FloatField()
    averages_tacklesInside50 = models.FloatField()
    averages_totalClearances = models.FloatField()
    averages_totalPossessions = models.FloatField()
    averages_turnovers = models.FloatField()
    averages_uncontestedPossessions = models.FloatField()

    class Meta:
        db_table = "afl_players_data"